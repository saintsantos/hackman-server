#!/usr/bin/env node

(function() {
  var Migrator, _, config, createMigration, createMigrator, cwd, debug, defaults, dir, exit, fs, mm, optparser, path, readConfig, runMigrations;

  fs = require('fs');

  path = require('path');

  optparser = require('nomnom');

  _ = require('lodash');

  debug = !!process.env.DEBUG;

  mm = require('..');

  Migrator = mm.Migrator;

  defaults = {
    directory: "migrations"
  };

  dir = process.cwd();

  config = null;

  readConfig = function(fileName) {
    var e, error, ext, i, len, ref;
    if (config) {
      return;
    }
    if (!fileName) {
      ref = ['json', 'js', 'coffee'];
      for (i = 0, len = ref.length; i < len; i++) {
        ext = ref[i];
        fileName = "mm-config." + ext;
        if (fs.existsSync(path.join(dir, fileName))) {
          break;
        }
        fileName = null;
      }
    }
    if (!fileName) {
      exit("Config file not specified, default not found");
    }
    try {
      fileName = path.join(dir, fileName);
      if (fileName.match(/\.coffee$/)) {
        require('coffee-script/register');
      }
      return config = _.assign({}, defaults, require(fileName));
    } catch (error) {
      e = error;
      return exit(fileName + " cannot be imported", e);
    }
  };

  cwd = function() {
    return path.join(dir, config.directory);
  };

  createMigrator = function() {
    return new Migrator(config);
  };

  runMigrations = function(opts) {
    readConfig(opts.config);
    return createMigrator().runFromDir(cwd(), exit);
  };

  createMigration = function(opts) {
    var id;
    readConfig(opts.config);
    id = opts._.slice(1).join(' ');
    if (!id) {
      exit("Migration ID is required");
    }
    return createMigrator().create(cwd(), id, exit, opts.coffee);
  };

  exit = function(msg, err) {
    if (msg) {
      console.error("Error: " + msg);
      if (debug && (err != null ? err.stack : void 0)) {
        console.error(err.stack);
      }
      process.exit(1);
    }
    return process.exit(0);
  };

  optparser.script('mm').option('config', {
    metavar: 'FILE',
    help: "The name of the file in the current directory, can be .js, or .json, or .coffee.\nFor .coffee, the `coffee-script` >= 1.7.0 package must be importable from the current directory."
  });

  optparser.command('migrate').callback(runMigrations);

  optparser.nocommand().callback(runMigrations);

  optparser.command('create').option('coffee', {
    abbr: 'c',
    flag: true,
    help: 'Generate migration stub in CoffeeScript'
  }).callback(createMigration);

  optparser.parse();

}).call(this);
